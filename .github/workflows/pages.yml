name: GitHub Pages

on:
  push:
    branches: main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: yarn

      - name: Configure GitHub Pages
        id: configure-pages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .astro/cache
          key: ${{ runner.os }}-astro-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,ts,jsx,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-astro-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Astro site
        run: yarn astro build
        env:
          BASE_PATH: ${{ steps.configure-pages.outputs.base_path }}
          GISCUS_REPO: ${{ vars.NEXT_PUBLIC_GISCUS_REPO }}
          GISCUS_REPO_ID: ${{ vars.NEXT_PUBLIC_GISCUS_REPOSITORY_ID }}
          GISCUS_CATEGORY: ${{ vars.NEXT_PUBLIC_GISCUS_CATEGORY }}
          GISCUS_CATEGORY_ID: ${{ vars.NEXT_PUBLIC_GISCUS_CATEGORY_ID }}
          UMAMI_SCRIPT_SRC: ${{ env.NEXT_UMAMI_SCRIPT_SRC }}
          UMAMI_WEBSITE_ID: ${{ vars.NEXT_UMAMI_ID }}
          UMAMI_HOST_URL: ${{ vars.NEXT_UMAMI_URL}}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
